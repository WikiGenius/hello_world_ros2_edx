<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

    <xacro:include filename="$(find ur_description)/urdf/ur_macro.xacro"/>

    <!-- Custom Arm Robot Macro Definition -->
    <xacro:macro name="custom_arm_robot" params="name ur_type parent *origin">

       <!-- parameters -->
        <xacro:property name="joint_limit_params" value="$(find ur_description)/config/${ur_type}/joint_limits.yaml"/>
        <xacro:property name="kinematics_params" value="$(find ur_description)/config/${ur_type}/default_kinematics.yaml"/>
        <xacro:property name="physical_params" value="$(find ur_description)/config/${ur_type}/physical_parameters.yaml"/>
        <xacro:property name="visual_params" value="$(find ur_description)/config/${ur_type}/visual_parameters.yaml"/>


        <!-- Main robot arm setup -->
        <xacro:ur_robot name="${name}" tf_prefix="${name}_" parent="${parent}"
                        joint_limits_parameters_file="${joint_limit_params}"
                        kinematics_parameters_file="${kinematics_params}"
                        physical_parameters_file="${physical_params}"
                        visual_parameters_file="${visual_params}"
                        transmission_hw_interface="${transmission_hw_interface}"
                        safety_limits="${safety_limits}"
                        safety_pos_margin="${safety_pos_margin}"
                        safety_k_position="${safety_k_position}"
                        use_fake_hardware="${use_fake_hardware}"
                        fake_sensor_commands="${fake_sensor_commands}"
                        sim_gazebo="${sim_gazebo}"
                        sim_ignition="${sim_ignition}"
                        headless_mode="${headless_mode}"
                        initial_positions="${xacro.load_yaml(initial_positions_file)}"
                        use_tool_communication="${use_tool_communication}"
                        tool_voltage="${tool_voltage}"
                        tool_parity="${tool_parity}"
                        tool_baud_rate="${tool_baud_rate}"
                        tool_stop_bits="${tool_stop_bits}"
                        tool_rx_idle_chars="${tool_rx_idle_chars}"
                        tool_tx_idle_chars="${tool_tx_idle_chars}"
                        tool_device_name="${tool_device_name}"
                        tool_tcp_port="${tool_tcp_port}"
                        robot_ip="${robot_ip}"
                        script_filename="${script_filename}"
                        output_recipe_filename="${output_recipe_filename}"
                        input_recipe_filename="${input_recipe_filename}"
                        reverse_ip="${reverse_ip}"
                        script_command_port="${script_command_port}"
                        reverse_port="${reverse_port}"
                        script_sender_port="${script_sender_port}"
                        trajectory_port="${trajectory_port}">
            <xacro:insert_block name="origin" />
        </xacro:ur_robot>

    <!-- Conditional inclusion for Gazebo simulation setup -->
    <xacro:if value="${sim_gazebo}">
        <!-- Gazebo plugins -->
        <gazebo reference="world">
        </gazebo>
        <gazebo>
            <plugin filename="libgazebo_ros2_control.so" name="gazebo_ros2_control">
                <parameters>${simulation_controllers}</parameters>
            </plugin>
        </gazebo>
    </xacro:if>

    <!-- Conditional inclusion for Ignition simulation setup -->
    <xacro:if value="${sim_ignition}">
        <!-- Ignition plugins -->
        <gazebo reference="world">
        </gazebo>
        <gazebo>
            <plugin filename="libign_ros2_control-system.so" name="ign_ros2_control::IgnitionROS2ControlPlugin">
                <parameters>${simulation_controllers}</parameters>
                <controller_manager_node_name>$${name}_controller_manager</controller_manager_node_name>
            </plugin>
        </gazebo>
    </xacro:if>


    </xacro:macro>

</robot>
